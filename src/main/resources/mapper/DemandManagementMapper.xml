<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springtest.springboot.dao.DemandManagementMapper" >
  <resultMap id="BaseResultMap" type="com.springtest.springboot.po.DemandManagement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="budget_id" property="budgetId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="used_capital" property="usedCapital" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, budget_id, department_id, name, introduce, used_capital, status, code, create_time, 
    update_time, create_user_id, update_user_id, remark
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select s.*
    from demand_management s
    where 1=1
    <if test="param.name != null and param.name != ''">
      AND s.name LIKE '%${param.name}%'
    </if>
    <if test="param.code != null and param.code != ''">
      AND s.code LIKE '%${param.code}%'
    </if>
    <if test="param.status != null and param.status != ''">
      AND s.status = #{param.status}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from demand_management
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from demand_management
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.DemandManagement" >
    insert into demand_management (id, budget_id, department_id, 
      name, introduce, used_capital, 
      status, code, create_time, 
      update_time, create_user_id, update_user_id, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{budgetId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{usedCapital,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.DemandManagement" >
    insert into demand_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="budgetId != null" >
        budget_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="usedCapital != null" >
        used_capital,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="budgetId != null" >
        #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="usedCapital != null" >
        #{usedCapital,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springtest.springboot.po.DemandManagement" >
    update demand_management
    <set >
      <if test="budgetId != null" >
        budget_id = #{budgetId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="usedCapital != null" >
        used_capital = #{usedCapital,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springtest.springboot.po.DemandManagement" >
    update demand_management
    set budget_id = #{budgetId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      used_capital = #{usedCapital,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>