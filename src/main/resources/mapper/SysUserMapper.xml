<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springtest.springboot.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.springtest.springboot.po.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_number" property="accountNumber" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="power_mid_id" property="powerMidId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="img_path" property="imgPath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_number, password, name, sex, birthday, tel, department_id, role_id, power_mid_id, 
    create_time, update_time, create_user_id, update_user_id, remark, count, img_path
  </sql>

  <select id="findByAccountNumber" resultMap="BaseResultMap">
    SELECT *
    from sys_user
    where account_number = #{number}
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    SELECT *
    from sys_user
    where 1=1
    <if test="sysUser.name != null and sysUser.name != ''">
      AND name LIKE '%${sysUser.name}%'
    </if>
    <if test="sysUser.accountNumber != null and sysUser.accountNumber != ''">
      AND account_number LIKE '%${sysUser.accountNumber}%'
    </if>

  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.springtest.springboot.po.SysUser" >
    insert into sys_user (id, account_number, password, 
      name, sex, birthday, 
      tel, department_id, role_id, 
      power_mid_id, create_time, update_time, 
      create_user_id, update_user_id, remark, 
      count, img_path)
    values (#{id,jdbcType=INTEGER}, #{accountNumber,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{tel,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{powerMidId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER}, #{imgPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.springtest.springboot.po.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountNumber != null" >
        account_number,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="powerMidId != null" >
        power_mid_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="imgPath != null" >
        img_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountNumber != null" >
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="powerMidId != null" >
        #{powerMidId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="imgPath != null" >
        #{imgPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springtest.springboot.po.SysUser" >
    update sys_user
    <set >
      <if test="accountNumber != null" >
        account_number = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="powerMidId != null" >
        power_mid_id = #{powerMidId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="imgPath != null" >
        img_path = #{imgPath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springtest.springboot.po.SysUser" >
    update sys_user
    set account_number = #{accountNumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      power_mid_id = #{powerMidId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      img_path = #{imgPath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>