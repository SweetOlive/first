<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springtest.springboot.dao.PurchaseInquiryMapper" >
  <resultMap id="BaseResultMap" type="com.springtest.springboot.po.PurchaseInquiry" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="arriveTime" property="arrivetime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="paied" property="paied" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="companyName" property="companyName" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_id, company_id, number, price, arriveTime, address, paied, code, create_time, 
    update_time, create_user_id, update_user_id, remark
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select s.*,c.name companyName,g.name goodsName
    from purchase_inquiry s
    join supplier_company c
    join price_goods_contact g
    where s.company_id = c.id AND s.goods_id = g.id
    <if test="param.paied != null and param.paied != ''">
      AND s.paied = #{param.paied}
    </if>
    <if test="companyName!= null and companyName != ''">
      AND c.name LIKE '%${companyName}%'
    </if>
    <if test="goodsName != null and goodsName != ''">
      AND g.name LIKE '%${goodsName}%'
    </if>
  </select>

  <select id="findByCode" resultMap="BaseResultMap" >
    select *
    from purchase_inquiry
    where code = #{code}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purchase_inquiry
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purchase_inquiry
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PurchaseInquiry" >
    insert into purchase_inquiry (id, goods_id, company_id, 
      number, price, arriveTime, 
      address, paied, code, 
      create_time, update_time, create_user_id, 
      update_user_id, remark)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{arrivetime,jdbcType=TIMESTAMP}, 
      #{address,jdbcType=VARCHAR}, #{paied,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PurchaseInquiry" >
    insert into purchase_inquiry
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="arrivetime != null" >
        arriveTime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="paied != null" >
        paied,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="arrivetime != null" >
        #{arrivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="paied != null" >
        #{paied,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springtest.springboot.po.PurchaseInquiry" >
    update purchase_inquiry
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="arrivetime != null" >
        arriveTime = #{arrivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="paied != null" >
        paied = #{paied,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springtest.springboot.po.PurchaseInquiry" >
    update purchase_inquiry
    set goods_id = #{goodsId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      arriveTime = #{arrivetime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      paied = #{paied,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>