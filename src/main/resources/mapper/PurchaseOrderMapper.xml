<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springtest.springboot.dao.PurchaseOrderMapper" >
  <resultMap id="BaseResultMap" type="com.springtest.springboot.po.PurchaseOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="inquiry_id" property="inquiryId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="transport" property="transport" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="arriveTime" property="arrivetime" jdbcType="TIMESTAMP" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="companyName" property="companyName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, inquiry_id, company_id, name, introduce, address, transport, status, arriveTime, 
    code, create_time, update_time, create_user_id, update_user_id, remark
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select s.*,c.name companyName
    from purchase_order s
    join supplier_company c
    where s.company_id = c.id
    <if test="param.name != null and param.name != ''">
      AND s.name LIKE '%${param.name}%'
    </if>
    <if test="param.code != null and param.code != ''">
      AND s.code LIKE '%${param.code}%'
    </if>
    <if test="param.status != null and param.status != ''">
      AND s.status = #{param.status}
    </if>
    <if test="param.transport != null and param.transport != ''">
      AND s.transport = #{param.transport}
    </if>
  </select>

  <select id="findWithStatus" resultMap="BaseResultMap">
    select s.*
    from purchase_order s
    where s.status = #{status}
  </select>

  <select id="findByName" resultMap="BaseResultMap">
    select s.*
    from purchase_order s
    where s.name = #{name}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purchase_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purchase_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PurchaseOrder" >
    insert into purchase_order (id, inquiry_id, company_id, 
      name, introduce, address, 
      transport, status, arriveTime, 
      code, create_time, update_time, 
      create_user_id, update_user_id, remark
      )
    values (#{id,jdbcType=INTEGER}, #{inquiryId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{transport,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{arrivetime,jdbcType=TIMESTAMP}, 
      #{code,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PurchaseOrder" >
    insert into purchase_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="inquiryId != null" >
        inquiry_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="transport != null" >
        transport,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="arrivetime != null" >
        arriveTime,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inquiryId != null" >
        #{inquiryId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="transport != null" >
        #{transport,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="arrivetime != null" >
        #{arrivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springtest.springboot.po.PurchaseOrder" >
    update purchase_order
    <set >
      <if test="inquiryId != null" >
        inquiry_id = #{inquiryId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="transport != null" >
        transport = #{transport,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="arrivetime != null" >
        arriveTime = #{arrivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springtest.springboot.po.PurchaseOrder" >
    update purchase_order
    set inquiry_id = #{inquiryId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      transport = #{transport,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      arriveTime = #{arrivetime,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>