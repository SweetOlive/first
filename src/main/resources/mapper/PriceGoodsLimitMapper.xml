<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springtest.springboot.dao.PriceGoodsLimitMapper" >
  <resultMap id="BaseResultMap" type="com.springtest.springboot.po.PriceGoodsLimit" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="price_max" property="priceMax" jdbcType="DOUBLE" />
    <result column="price_min" property="priceMin" jdbcType="DOUBLE" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_code, price_max, price_min, start_time, end_time, create_time, update_time, 
    create_user_id, update_user_id, remark
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    SELECT l.*,c.name goodsName
    from price_goods_limit l
    join price_goods_contact c
    where l.goods_code = c.code
    <if test="param.goodsCode != null and param.goodsCode != ''">
      AND l.goods_code LIKE '%${param.goodsCode}%'
    </if>
    <if test="goodsName != null and goodsName != ''">
      AND c.name LIKE '%${goodsName}%'
    </if>

  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from price_goods_limit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from price_goods_limit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PriceGoodsLimit" >
    insert into price_goods_limit (id, goods_code, price_max, 
      price_min, start_time, end_time, 
      create_time, update_time, create_user_id, 
      update_user_id, remark)
    values (#{id,jdbcType=INTEGER}, #{goodsCode,jdbcType=VARCHAR}, #{priceMax,jdbcType=DOUBLE}, 
      #{priceMin,jdbcType=DOUBLE}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.springtest.springboot.po.PriceGoodsLimit" >
    insert into price_goods_limit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="priceMax != null" >
        price_max,
      </if>
      <if test="priceMin != null" >
        price_min,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="priceMax != null" >
        #{priceMax,jdbcType=DOUBLE},
      </if>
      <if test="priceMin != null" >
        #{priceMin,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springtest.springboot.po.PriceGoodsLimit" >
    update price_goods_limit
    <set >
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="priceMax != null" >
        price_max = #{priceMax,jdbcType=DOUBLE},
      </if>
      <if test="priceMin != null" >
        price_min = #{priceMin,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springtest.springboot.po.PriceGoodsLimit" >
    update price_goods_limit
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      price_max = #{priceMax,jdbcType=DOUBLE},
      price_min = #{priceMin,jdbcType=DOUBLE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>